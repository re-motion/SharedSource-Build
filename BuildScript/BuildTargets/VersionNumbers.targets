<?xml version="1.0" encoding="UTF-8" ?>

<!-- Copyright (c) rubicon IT GmbH, www.rubicon.eu
 !
 ! See the NOTICE file distributed with this work for additional information
 ! regarding copyright ownership.  rubicon licenses this file to you under 
 ! the Apache License, Version 2.0 (the "License"); you may not use this 
 ! file except in compliance with the License.  You may obtain a copy of the 
 ! License at
 !
 !   http://www.apache.org/licenses/LICENSE-2.0
 !
 ! Unless required by applicable law or agreed to in writing, software 
 ! distributed under the License is distributed on an "AS IS" BASIS, WITHOUT 
 ! WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the 
 ! License for the specific language governing permissions and limitations
 ! under the License.
-->

<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <UsingTask AssemblyFile="$(RemotionBuildScriptTasksPath)Remotion.BuildScript.dll" TaskName="MSBuild.ExtensionPack.Framework.TextString"/>

  <PropertyGroup>
    <!-- http://semver.org/spec/v2.0.0.html -->
    <_versionNumberPattern><![CDATA[(?<major>\d+)\.(?<minor>\d+)\.(?<patch>\d+)]]></_versionNumberPattern>
    <_versionPreReleaseSuffixPattern><![CDATA[(?:\-(?<prereleaseSuffix>(?<prereleaseName>[a-zA-Z]+)\.(?<prereleaseCounter>[1-9][0-9]{0,2})(?<prereleaseRemainder>(?:\.[a-zA-Z0-9-]+)*)))?]]></_versionPreReleaseSuffixPattern>
    <_versionBuildMetadataPattern><![CDATA[(?:\+(?<buildMetadata>[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*))?]]></_versionBuildMetadataPattern>
    <VersionPattern>^$(_versionNumberPattern)$(_versionPreReleaseSuffixPattern)$</VersionPattern>
    <VersionWithBuildMetadataPattern>^$(_versionNumberPattern)$(_versionPreReleaseSuffixPattern)$(_versionBuildMetadataPattern)$</VersionWithBuildMetadataPattern>
  </PropertyGroup>

  <Target Name="CheckVersion" DependsOnTargets="CheckVersionIsSemVer">
    <Error Text="The property 'Version' is not set." Condition="'$(Version)' == ''" />
  </Target>

  <Target Name="CheckVersionIsSemVer" Condition="'$(Version)' != ''">
    <Error Text="The property 'VersionPattern' is not set." Condition="'$(VersionPattern)' == ''" />

    <Error Text="Only versions according to SemVer 2.0 without build metadata are allowed. In case of a pre-release version, the release-counter may only contain up to 3 digits (e.g. '-alpha.123'). Version='$(Version)'" 
           Condition="'$( [System.Text.RegularExpressions.Regex]::IsMatch ( $(Version), $(VersionPattern) ) )' == 'False'" />
  </Target>

  <Target Name="PrepareAssemblyVersion" DependsOnTargets="CheckVersionIsSemVer" Condition="'$(Version)' != ''">
    <Error Text="The property 'VersionPattern' is not set." Condition="'$(VersionPattern)' == ''" />

    <!-- Support binding-redirect-free patching of a production deployment -->
    <PropertyGroup>
      <_assemblyVersionReplacementPattern>${major}.${minor}.0.0</_assemblyVersionReplacementPattern>
      <AssemblyVersion>$( [System.Text.RegularExpressions.Regex]::Replace ( $(Version), $(VersionPattern), $(_assemblyVersionReplacementPattern) ) )</AssemblyVersion>
    </PropertyGroup>
    
    <Message Text="Done preparing AssemblyVersion '$(AssemblyVersion)'." Importance="High"/>
  </Target>

  <Target Name="PrepareAssemblyFileVersion" DependsOnTargets="CheckVersionIsSemVer" Condition="'$(Version)' != ''">
    <Error Text="The property 'VersionPattern' is not set." Condition="'$(VersionPattern)' == ''" />

    <PropertyGroup>
      <_revisionType>$( [System.Text.RegularExpressions.Regex]::Replace ( $(Version), $(VersionPattern), "${prereleaseName}" ) )</_revisionType>
      <_revisionPrefix Condition="'$(_revisionType)' != ''">$( [MSBuild]::Subtract( $( [System.Convert]::ToByte( $(_revisionType.ToLower()[0]) ) ), 96 ) )</_revisionPrefix>
      <_revisionPrefix Condition="'$(_revisionType)' == ''">30</_revisionPrefix>
      <_revisionSuffix>$( [System.Text.RegularExpressions.Regex]::Replace ( $(Version), $(VersionPattern), "${prereleaseCounter}" ) )</_revisionSuffix>
      <_revisionSuffix Condition="'$(_revisionSuffix)' == ''">000</_revisionSuffix>
    </PropertyGroup>
    
    <MSBuild.ExtensionPack.Framework.TextString TaskAction="PadLeft" OldString="$(_revisionPrefix)" String1="0" Count="2"> 
      <Output PropertyName="_revisionPrefix" TaskParameter="NewString"/> 
    </MSBuild.ExtensionPack.Framework.TextString>

    <MSBuild.ExtensionPack.Framework.TextString TaskAction="PadLeft" OldString="$(_revisionSuffix)" String1="0" Count="3"> 
      <Output PropertyName="_revisionSuffix" TaskParameter="NewString"/> 
    </MSBuild.ExtensionPack.Framework.TextString> 

    <PropertyGroup>
      <_assemblyFileVersionReplacementPattern>${major}.${minor}.${patch}.$(_revisionPrefix)$(_revisionSuffix)</_assemblyFileVersionReplacementPattern>
      <AssemblyFileVersion>$( [System.Text.RegularExpressions.Regex]::Replace ( $(Version), $(VersionPattern), $(_assemblyFileVersionReplacementPattern) ) )</AssemblyFileVersion>
    </PropertyGroup>

    <Message Text="Done preparing AssemblyFileVersion '$(AssemblyFileVersion)'." Importance="High"/>
  </Target>

  <Target Name="PrepareAssemblyInformationalVersion" DependsOnTargets="CheckVersionIsSemVer" Condition="'$(Version)' != ''">
    <Error Text="The property 'VersionWithBuildMetadataPattern' is not set." Condition="'$(VersionWithBuildMetadataPattern)' == ''" />
    <Error Text="The property 'ConfigurationID' is not set." Condition="'$(ConfigurationID)' == ''" />

    <PropertyGroup>
      <AssemblyInformationalVersion>$(Version)+$(ConfigurationID)</AssemblyInformationalVersion>
      <AssemblyInformationalVersion Condition="'$(AdditionalBuildMetadata)' != ''">$(AssemblyInformationalVersion).$(AdditionalBuildMetadata)</AssemblyInformationalVersion>
    </PropertyGroup>

    <Error Text="The build metadata of the version did not conform to SemVer 2.0 when building the AssemblyInformationalVersion. AssemblyInformationalVersion='$(AssemblyInformationalVersion)'" 
           Condition="'$( [System.Text.RegularExpressions.Regex]::IsMatch ( $(AssemblyInformationalVersion), $(VersionWithBuildMetadataPattern) ) )' == 'False'" />

    <Message Text="Done preparing AssemblyInformationalVersion '$(AssemblyInformationalVersion)'." Importance="High"/>
  </Target>

  <Target Name="PrepareAssemblyNuGetVersion" DependsOnTargets="CheckVersionIsSemVer" Condition="'$(Version)' != ''">
    <PropertyGroup>
      <AssemblyNuGetVersion>$(Version)</AssemblyNuGetVersion>
    </PropertyGroup>

    <Message Text="Done preparing AssemblyNuGetVersion '$(AssemblyNuGetVersion)'." Importance="High"/>
  </Target>

  <Target Name="PrepareDependDBProjectVersion" DependsOnTargets="PrepareAssemblyVersion" Condition="'$(Version)' != ''">
    <Error Text="The property 'AssemblyVersion' is not set." Condition="'$(AssemblyVersion)' == ''" />

    <Message Text="The property 'DependDBProjectVersion' is not set. Falling back to 'AssemblyVersion'" />
    <PropertyGroup>
      <DependDBProjectVersion Condition="'$(DependDBProjectVersion)' == ''">$(AssemblyVersion)</DependDBProjectVersion>
    </PropertyGroup>

    <Message Text="Done preparing DependDBProjectVersion '$(DependDBProjectVersion)'." Importance="High"/>
  </Target>

  <Target Name="PrepareVersionWithoutPrerelease" DependsOnTargets="CheckVersionIsSemVer" Condition="'$(Version)' != ''">
    <Error Text="The property 'VersionPattern' is not set." Condition="'$(VersionPattern)' == ''" />

    <PropertyGroup>
      <_versionWithoutPrereleaseReplacementPattern>${major}.${minor}.${patch}</_versionWithoutPrereleaseReplacementPattern>
      <VersionWithoutPrerelease>$( [System.Text.RegularExpressions.Regex]::Replace ( $(Version), $(VersionPattern), $(_versionWithoutPrereleaseReplacementPattern) ) )</VersionWithoutPrerelease>
    </PropertyGroup>

    <Message Text="Done preparing VersionWithoutPrerelease '$(VersionWithoutPrerelease)'." Importance="High"/>
  </Target>

  <Target Name="UpdateVersionProps">
    <XmlPoke
        XmlInputPath="$(CustomizationsDirectory)Version.props"
        Namespaces="&lt;Namespace Prefix='x'
        Uri='http://schemas.microsoft.com/developer/msbuild/2003'/&gt;"
        Query="//x:PropertyGroup/x:Version"
        Value="$(Version)"
    />
  </Target>

</Project>