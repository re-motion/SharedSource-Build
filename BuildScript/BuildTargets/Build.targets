<?xml version="1.0" encoding="UTF-8" ?>

<!-- Copyright (c) rubicon IT GmbH, www.rubicon.eu
 !
 ! See the NOTICE file distributed with this work for additional information
 ! regarding copyright ownership.  rubicon licenses this file to you under 
 ! the Apache License, Version 2.0 (the "License"); you may not use this 
 ! file except in compliance with the License.  You may obtain a copy of the 
 ! License at
 !
 !   http://www.apache.org/licenses/LICENSE-2.0
 !
 ! Unless required by applicable law or agreed to in writing, software 
 ! distributed under the License is distributed on an "AS IS" BASIS, WITHOUT 
 ! WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the 
 ! License for the specific language governing permissions and limitations
 ! under the License.
-->

<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <UsingTask AssemblyFile="$(RemotionBuildScriptTasksPath)Remotion.BuildScript.dll" TaskName="MSBuild.ExtensionPack.Xml.XmlFile"/>

  <PropertyGroup>
    <BackupExtension>bak</BackupExtension>
  </PropertyGroup>

  <Target Name="AddAdditionalMetadataToOutputFiles">
    <ItemGroup>
      <_projectFiles Remove="@(_projectFiles)" />
      <_projectFiles Include="%(ReleaseOutputFiles.MSBuildSourceProjectFile)">
        <OutputFileIdentity>%(Identity)</OutputFileIdentity>
        <MSBuildSourceProjectFile>%(MSBuildSourceProjectFile)</MSBuildSourceProjectFile>
        <MSBuildSourceTargetName>%(MSBuildSourceTargetName)</MSBuildSourceTargetName>
        <MSBuildToolsVersion>%(MSBuildToolsVersion)</MSBuildToolsVersion>
        <AdditionalProperties>%(AdditionalProperties)</AdditionalProperties>
        <AssemblyName>%(FileName)</AssemblyName>
        <CreateDocumentationFile Condition="'%(ReleaseOutputFiles.CreateDocumentationFile)' == ''">False</CreateDocumentationFile>
        <CreateDocumentationFile Condition="'%(ReleaseOutputFiles.CreateDocumentationFile)' != ''">%(ReleaseOutputFiles.CreateDocumentationFile)</CreateDocumentationFile>
        <ExcludeFromDocumentation Condition="'%(ReleaseOutputFiles.ExcludeFromDocumentation)' == ''">False</ExcludeFromDocumentation>
        <ExcludeFromDocumentation Condition="'%(ReleaseOutputFiles.ExcludeFromDocumentation)' != ''">%(ReleaseOutputFiles.ExcludeFromDocumentation)</ExcludeFromDocumentation>
      </_projectFiles>
    </ItemGroup>

    <ItemGroup>
      <ReleaseOutputFiles Remove="@(ReleaseOutputFiles)" />
      <ReleaseOutputFiles Include="%(_projectFiles.OutputFileIdentity)">
        <MSBuildSourceProjectFile>%(MSBuildSourceProjectFile)</MSBuildSourceProjectFile>
        <MSBuildSourceTargetName>%(MSBuildSourceTargetName)</MSBuildSourceTargetName>
        <MSBuildToolsVersion>%(MSBuildToolsVersion)</MSBuildToolsVersion>
        <AdditionalProperties>%(AdditionalProperties)</AdditionalProperties>
        <AssemblyName>%(AssemblyName)</AssemblyName>
        <CreateDocumentationFile>%(CreateDocumentationFile)</CreateDocumentationFile>
        <ExcludeFromDocumentation>%(ExcludeFromDocumentation)</ExcludeFromDocumentation>
        <ProjectDirectory>%(RootDir)%(Directory)</ProjectDirectory>
      </ReleaseOutputFiles>
    </ItemGroup>

    <ItemGroup>
      <_projectFiles Remove="@(_projectFiles)" />
      <_projectFiles Include="%(TestOutputFiles.MSBuildSourceProjectFile)">
        <OutputFileIdentity>%(Identity)</OutputFileIdentity>
        <MSBuildSourceProjectFile>%(MSBuildSourceProjectFile)</MSBuildSourceProjectFile>
        <MSBuildSourceTargetName>%(MSBuildSourceTargetName)</MSBuildSourceTargetName>
        <MSBuildToolsVersion>%(MSBuildToolsVersion)</MSBuildToolsVersion>
        <AdditionalProperties>%(AdditionalProperties)</AdditionalProperties>
        <AssemblyName>%(FileName)</AssemblyName>
        <IsDatabaseTest Condition="'%(TestOutputFiles.IsDatabaseTest)' == ''">False</IsDatabaseTest>
        <IsDatabaseTest Condition="'%(TestOutputFiles.IsDatabaseTest)' != ''">%(TestOutputFiles.IsDatabaseTest)</IsDatabaseTest>
        <IsWebTest Condition="'%(TestOutputFiles.IsWebTest)' == ''">False</IsWebTest>
        <IsWebTest Condition="'%(TestOutputFiles.IsWebTest)' != ''">%(TestOutputFiles.IsWebTest)</IsWebTest>
        <TestConfiguration Condition="'%(TestOutputFiles.TestConfiguration)' != ''">%(TestOutputFiles.TestingConfiguration)</TestConfiguration>
        <TestSetupBuildFile Condition="'%(TestOutputFiles.TestSetupBuildFile)' == ''"></TestSetupBuildFile>
        <TestSetupBuildFile Condition="'%(TestOutputFiles.TestSetupBuildFile)' != ''">%(TestOutputFiles.TestingSetupBuildFile)</TestSetupBuildFile>
        <ExecutionRuntime Condition="'%(TestOutputFiles.ExecutionRuntime)' == ''">$(DefaultTestExecutionRuntime)</ExecutionRuntime>
        <ExecutionRuntime Condition="'%(TestOutputFiles.ExecutionRuntime)' != ''">%(TestOutputFiles.ExecutionRuntime)</ExecutionRuntime>
      </_projectFiles>
    </ItemGroup>

    <ItemGroup>
      <TestOutputFiles Remove="@(TestOutputFiles)" />
      <TestOutputFiles Include="%(_projectFiles.OutputFileIdentity)">
        <MSBuildSourceProjectFile>%(MSBuildSourceProjectFile)</MSBuildSourceProjectFile>
        <MSBuildSourceTargetName>%(MSBuildSourceTargetName)</MSBuildSourceTargetName>
        <MSBuildToolsVersion>%(MSBuildToolsVersion)</MSBuildToolsVersion>
        <AdditionalProperties>%(AdditionalProperties)</AdditionalProperties>
        <AssemblyName>%(AssemblyName)</AssemblyName>
        <IsDatabaseTest>%(IsDatabaseTest)</IsDatabaseTest>
        <IsWebTest>%(IsWebTest)</IsWebTest>
        <TestConfiguration>%(TestConfiguration)</TestConfiguration>
        <TestSetupBuildFile>%(TestSetupBuildFile)</TestSetupBuildFile>
        <ExecutionRuntime>%(ExecutionRuntime)</ExecutionRuntime>
        <ProjectDirectory>%(RootDir)%(Directory)</ProjectDirectory>
      </TestOutputFiles>
    </ItemGroup>

  </Target>

  <Target Name="CreateStandardExcludes">
    <Error Text="The property 'SolutionDirectory' is not set." Condition="'$(SolutionDirectory)' == ''" />

    <ItemGroup>
      <StandardExcludes Include="$(SolutionDirectory)**\.git\**"/>
      <StandardExcludes Include="$(SolutionDirectory)**\.svn\**"/>
      <StandardExcludes Include="$(SolutionDirectory)**\_svn\**"/>
    </ItemGroup>
  </Target>
  
  <Target Name="CleanFolders">
    <Error Text="The property 'OutputDirectory' is not set." Condition="'$(OutputDirectory)' == ''" />
    <Error Text="The property 'LogDirectory' is not set." Condition="'$(LogDirectory)' == ''" />
    <Error Text="The property 'TempDirectory' is not set." Condition="'$(TempDirectory)' == ''" />
    
    <Exec Command="rmdir /Q /S &quot;$(LogDirectory)&quot;" Condition="Exists ($(LogDirectory))" />
    <Exec Command="rmdir /Q /S &quot;$(TempDirectory)&quot;" Condition="Exists ($(TempDirectory))" />
    <Exec Command="rmdir /Q /S &quot;$(OutputDirectory)&quot;" Condition="Exists ($(OutputDirectory))" />
  </Target>

  <Target Name="CreateLogDirectory">
    <Error Text="The property 'LogDirectory' is not set." Condition="'$(LogDirectory)' == ''" />

    <MakeDir Directories="$(LogDirectory)" />
  </Target>

  <Target Name="LogConfiguration">
    <Error Text="The property 'ConfigurationID' is not set." Condition="'$(ConfigurationID)' == ''" />
    <Message Text="Current configuration: $(ConfigurationID)"/>
  </Target>

  <Target Name="CleanProjects">
    <Message Text="Cleaning projects, ConfigurationID=$(ConfigurationID)" Importance="High"/>
    <Error Text="The property 'ConfigurationID' is not set." Condition="'$(ConfigurationID)' == ''" />

    <MSBuild Projects="@(ReleaseProjectFiles);@(UnitTestProjectFiles)"
             Targets="Clean"
             Properties="Configuration=$(ConfigurationID);"/>

    <Message Text="Done cleaning projects, ConfigurationID=$(ConfigurationID)" Importance="High"/>
  </Target>

  <Target Name="RestoreBackupFiles">
    <Message Text="Restoring backup copies of files changed during the build process, ConfigurationID=$(ConfigurationID)" Importance="High"/>

    <Move SourceFiles="%(ModifiedFiles.Backup)" DestinationFiles="%(ModifiedFiles.Identity)" />

    <Delete Files="@(CreatedFiles)" />

    <Message Text="Done restoring backup copies, ConfigurationID=$(ConfigurationID)" Importance="High"/>
  </Target>

  <Target Name="BuildReleaseProjects" DependsOnTargets="UpdateAssemblyInfos;UpdateReleaseProjectFiles;">
    <Message Text="Building release projects, ConfigurationID=$(ConfigurationID)" Importance="High"/>

    <PropertyGroup>
      <_startTime>$([System.DateTime]::UtcNow)</_startTime>
    </PropertyGroup>

    <MSBuild Projects="@(ReleaseProjectFiles)"
             Targets="DispatchToInnerBuilds;Build"
             ContinueOnError="false"
             ToolsVersion="%(ReleaseProjectFiles.MSBuildToolsVersion)">
      <Output ItemName="ReleaseOutputFiles" TaskParameter="TargetOutputs"/>
    </MSBuild>

    <PropertyGroup>
      <_timeTaken>$([System.DateTime]::UtcNow.Subtract($([System.DateTime]::Parse($(_startTime)))).TotalMilliseconds.ToString(0))</_timeTaken>
    </PropertyGroup>

    <Message Text="##teamcity[buildStatisticValue key='Duration.BuildReleaseProjects.$(ConfigurationID)' value='$(_timeTaken)']"
             Condition="'$(TEAMCITY_VERSION)' != ''" />

    <Message Text="Done building release projects, ConfigurationID=$(ConfigurationID)" Importance="High"/>
  </Target>

  <Target Name="BuildTestProjects" DependsOnTargets="UpdateAssemblyInfos;UpdateUnitTestProjectFiles;UpdateIntegrationTestProjectFiles;">
    <Message Text="Building test projects, ConfigurationID=$(ConfigurationID)" Importance="High"/>

    <PropertyGroup>
      <_startTime>$([System.DateTime]::UtcNow)</_startTime>
    </PropertyGroup>

    <MSBuild Projects="@(UnitTestProjectFiles)"
             Targets="DispatchToInnerBuilds;Build"
             ContinueOnError="false"
             ToolsVersion="%(UnitTestProjectFiles.MSBuildToolsVersion)">
      <Output ItemName="TestOutputFiles" TaskParameter="TargetOutputs"/>
    </MSBuild>

    <MSBuild Projects="@(IntegrationTestProjectFiles)"
             Targets="DispatchToInnerBuilds;Build"
             ContinueOnError="false"
             ToolsVersion="%(IntegrationTestProjectFiles.MSBuildToolsVersion)">
      <Output ItemName="TestOutputFiles" TaskParameter="TargetOutputs"/>
    </MSBuild>

    <PropertyGroup>
      <_timeTaken>$([System.DateTime]::UtcNow.Subtract($([System.DateTime]::Parse($(_startTime)))).TotalMilliseconds.ToString(0))</_timeTaken>
    </PropertyGroup>

    <Message Text="##teamcity[buildStatisticValue key='Duration.BuildTestProjects.$(ConfigurationID)' value='$(_timeTaken)']"
             Condition="'$(TEAMCITY_VERSION)' != ''" />

    <Message Text="Done building test projects, ConfigurationID=$(ConfigurationID)" Importance="High"/>
  </Target>

  <Target Name="UpdateReleaseProjectFiles"
      Outputs="%(ReleaseProjectFiles.Identity)"
      Condition="'@(ReleaseProjectFiles)' != ''"
      DependsOnTargets="PrepareCommonBuildProperties">

    <Error Text="The property 'CommonBuildProperties' is not set." Condition="'$(CommonBuildProperties)' == ''" />

    <ItemGroup>
      <_namespaces Remove="@(_namespaces)"/>
      <_namespaces Include="MSBuild">
        <Prefix>msb</Prefix>
        <Uri>http://schemas.microsoft.com/developer/msbuild/2003</Uri>
      </_namespaces>
    </ItemGroup>

    <!-- Classic project files -->
    <MSBuild.ExtensionPack.Xml.XmlFile
        TaskAction="ReadAttribute"
        Namespaces="@(_namespaces)"
        File="%(ReleaseProjectFiles.Identity)"
        XPath="/msb:Project/@ToolsVersion">
      <Output TaskParameter="Value" PropertyName="_msBuildToolsVersion" />
    </MSBuild.ExtensionPack.Xml.XmlFile>

    <!-- .NET Core style project files -->
    <MSBuild.ExtensionPack.Xml.XmlFile
        TaskAction="ReadAttribute"
        File="%(ReleaseProjectFiles.Identity)"
        XPath="/Project/@ToolsVersion"
        Condition="'$(_msBuildToolsVersion)' == ''">
      <Output TaskParameter="Value" PropertyName="_msBuildToolsVersion" />
    </MSBuild.ExtensionPack.Xml.XmlFile>

    <PropertyGroup>
      <_additionalBuildProperties>$(CommonBuildProperties)</_additionalBuildProperties>
    </PropertyGroup>

    <ItemGroup>
      <ReleaseProjectFiles Condition="'%(ReleaseProjectFiles.Identity)' == '%(Identity)'" >
        <MSBuildToolsVersion>$(_msBuildToolsVersion)</MSBuildToolsVersion>
        <AdditionalProperties>$(_additionalBuildProperties)</AdditionalProperties>
      </ReleaseProjectFiles>
    </ItemGroup>

    <PropertyGroup>
      <_msBuildToolsVersion></_msBuildToolsVersion>
      <_additionalBuildProperties></_additionalBuildProperties>
    </PropertyGroup>
  </Target>

  <Target Name="UpdateUnitTestProjectFiles"
      Outputs="%(UnitTestProjectFiles.Identity)"
      Condition="'@(UnitTestProjectFiles)' != ''"
      DependsOnTargets="PrepareCommonBuildProperties">

    <Error Text="The property 'CommonBuildProperties' is not set." Condition="'$(CommonBuildProperties)' == ''" />

    <ItemGroup>
      <_namespaces Remove="@(_namespaces)"/>
      <_namespaces Include="MSBuild">
        <Prefix>msb</Prefix>
        <Uri>http://schemas.microsoft.com/developer/msbuild/2003</Uri>
      </_namespaces>
    </ItemGroup>

    <!-- Classic project files -->
    <MSBuild.ExtensionPack.Xml.XmlFile
        TaskAction="ReadAttribute"
        Namespaces="@(_namespaces)"
        File="%(UnitTestProjectFiles.Identity)"
        XPath="/msb:Project/@ToolsVersion">
      <Output TaskParameter="Value" PropertyName="_msBuildToolsVersion" />
    </MSBuild.ExtensionPack.Xml.XmlFile>

    <!-- .NET Core style project files -->
    <MSBuild.ExtensionPack.Xml.XmlFile
        TaskAction="ReadAttribute"
        File="%(UnitTestProjectFiles.Identity)"
        XPath="/Project/@ToolsVersion"
        Condition="'$(_msBuildToolsVersion)' == ''">
      <Output TaskParameter="Value" PropertyName="_msBuildToolsVersion" />
    </MSBuild.ExtensionPack.Xml.XmlFile>

    <PropertyGroup>
      <_additionalBuildProperties>$(CommonBuildProperties)</_additionalBuildProperties>
    </PropertyGroup>

    <ItemGroup>
      <UnitTestProjectFiles Condition="'%(UnitTestProjectFiles.Identity)' == '%(Identity)'" >
        <MSBuildToolsVersion>$(_msBuildToolsVersion)</MSBuildToolsVersion>
        <AdditionalProperties>$(_additionalBuildProperties)</AdditionalProperties>
      </UnitTestProjectFiles>
    </ItemGroup>

    <PropertyGroup>
      <_msBuildToolsVersion></_msBuildToolsVersion>
      <_additionalBuildProperties></_additionalBuildProperties>
    </PropertyGroup>
  </Target>

  <Target Name="UpdateIntegrationTestProjectFiles"
      Outputs="%(IntegrationTestProjectFiles.Identity)"
      Condition="'@(IntegrationTestProjectFiles)' != ''"
      DependsOnTargets="PrepareCommonBuildProperties">

    <Error Text="The property 'CommonBuildProperties' is not set." Condition="'$(CommonBuildProperties)' == ''" />

    <ItemGroup>
      <_namespaces Remove="@(_namespaces)"/>
      <_namespaces Include="MSBuild">
        <Prefix>msb</Prefix>
        <Uri>http://schemas.microsoft.com/developer/msbuild/2003</Uri>
      </_namespaces>
    </ItemGroup>

    <!-- Classic project files -->
    <MSBuild.ExtensionPack.Xml.XmlFile
        TaskAction="ReadAttribute"
        Namespaces="@(_namespaces)"
        File="%(IntegrationTestProjectFiles.Identity)"
        XPath="/msb:Project/@ToolsVersion">
      <Output TaskParameter="Value" PropertyName="_msBuildToolsVersion" />
    </MSBuild.ExtensionPack.Xml.XmlFile>

    <!-- .NET Core style project files -->
    <MSBuild.ExtensionPack.Xml.XmlFile
        TaskAction="ReadAttribute"
        File="%(IntegrationTestProjectFiles.Identity)"
        XPath="/Project/@ToolsVersion"
        Condition="'$(_msBuildToolsVersion)' == ''">
      <Output TaskParameter="Value" PropertyName="_msBuildToolsVersion" />
    </MSBuild.ExtensionPack.Xml.XmlFile>

    <PropertyGroup>
      <_additionalBuildProperties>$(CommonBuildProperties)</_additionalBuildProperties>
    </PropertyGroup>

    <ItemGroup>
      <IntegrationTestProjectFiles Condition="'%(IntegrationTestProjectFiles.Identity)' == '%(Identity)'" >
        <MSBuildToolsVersion>$(_msBuildToolsVersion)</MSBuildToolsVersion>
        <AdditionalProperties>$(_additionalBuildProperties)</AdditionalProperties>
      </IntegrationTestProjectFiles>
    </ItemGroup>

    <PropertyGroup>
      <_msBuildToolsVersion></_msBuildToolsVersion>
      <_additionalBuildProperties></_additionalBuildProperties>
    </PropertyGroup>
  </Target>

  <Target Name="PrepareCommonBuildProperties"
      DependsOnTargets="CheckVersion;PrepareAssemblyVersion;PrepareAssemblyFileVersion;PrepareAssemblyInformationalVersion;PrepareAssemblyNuGetVersion;">

    <Error Text="The property 'ConfigurationID' is not set." Condition="'$(ConfigurationID)' == ''" />
    <Error Text="The property 'SolutionKeyFile' is not set." Condition="'$(SolutionKeyFile)' == ''" />
    <Error Text="The property 'Version' is not set." Condition="'$(Version)' == ''" />
    <Error Text="The property 'AssemblyVersion' is not set." Condition="'$(AssemblyVersion)' == ''" />
    <Error Text="The property 'AssemblyFileVersion' is not set." Condition="'$(AssemblyFileVersion)' == ''" />
    <Error Text="The property 'AssemblyInformationalVersion' is not set." Condition="'$(AssemblyInformationalVersion)' == ''" />
    <Error Text="The property 'AssemblyNuGetVersion' is not set." Condition="'$(AssemblyNuGetVersion)' == ''" />

    <PropertyGroup>
      <CommonBuildProperties>
        Configuration=$(ConfigurationID);
        AssemblyOriginatorKeyFile=$(SolutionKeyFile);
        Version=$(Version);
        AssemblyVersion=$(AssemblyVersion);
        FileVersion=$(AssemblyFileVersion);
        InformationalVersion=$(AssemblyInformationalVersion);
        PackageVersion=$(AssemblyNuGetVersion);
        ContinuousIntegrationBuild=true
      </CommonBuildProperties>
    </PropertyGroup>

  </Target>

</Project>